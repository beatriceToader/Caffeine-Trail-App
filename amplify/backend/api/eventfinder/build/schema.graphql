type CoffeeShop @aws_iam @aws_api_key {
  id: ID!
  image: String
  name: String!
  address: String!
  userId: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCoffeeShopConnection @aws_api_key @aws_iam {
  items: [CoffeeShop]!
  nextToken: String
}

input ModelCoffeeShopFilterInput {
  id: ModelIDInput
  image: ModelStringInput
  name: ModelStringInput
  address: ModelStringInput
  userId: ModelStringInput
  and: [ModelCoffeeShopFilterInput]
  or: [ModelCoffeeShopFilterInput]
  not: ModelCoffeeShopFilterInput
}

type Query {
  getCoffeeShop(id: ID!): CoffeeShop @aws_api_key @aws_iam
  listCoffeeShops(filter: ModelCoffeeShopFilterInput, limit: Int, nextToken: String): ModelCoffeeShopConnection @aws_api_key @aws_iam
}

input ModelCoffeeShopConditionInput {
  image: ModelStringInput
  name: ModelStringInput
  address: ModelStringInput
  userId: ModelStringInput
  and: [ModelCoffeeShopConditionInput]
  or: [ModelCoffeeShopConditionInput]
  not: ModelCoffeeShopConditionInput
}

input CreateCoffeeShopInput {
  id: ID
  image: String
  name: String!
  address: String!
  userId: String!
}

input UpdateCoffeeShopInput {
  id: ID!
  image: String
  name: String
  address: String
  userId: String
}

input DeleteCoffeeShopInput {
  id: ID!
}

type Mutation {
  createCoffeeShop(input: CreateCoffeeShopInput!, condition: ModelCoffeeShopConditionInput): CoffeeShop @aws_api_key @aws_iam
  updateCoffeeShop(input: UpdateCoffeeShopInput!, condition: ModelCoffeeShopConditionInput): CoffeeShop @aws_api_key @aws_iam
  deleteCoffeeShop(input: DeleteCoffeeShopInput!, condition: ModelCoffeeShopConditionInput): CoffeeShop @aws_api_key @aws_iam
}

input ModelSubscriptionCoffeeShopFilterInput {
  id: ModelSubscriptionIDInput
  image: ModelSubscriptionStringInput
  name: ModelSubscriptionStringInput
  address: ModelSubscriptionStringInput
  userId: ModelSubscriptionStringInput
  and: [ModelSubscriptionCoffeeShopFilterInput]
  or: [ModelSubscriptionCoffeeShopFilterInput]
}

type Subscription {
  onCreateCoffeeShop(filter: ModelSubscriptionCoffeeShopFilterInput): CoffeeShop @aws_subscribe(mutations: ["createCoffeeShop"]) @aws_api_key @aws_iam
  onUpdateCoffeeShop(filter: ModelSubscriptionCoffeeShopFilterInput): CoffeeShop @aws_subscribe(mutations: ["updateCoffeeShop"]) @aws_api_key @aws_iam
  onDeleteCoffeeShop(filter: ModelSubscriptionCoffeeShopFilterInput): CoffeeShop @aws_subscribe(mutations: ["deleteCoffeeShop"]) @aws_api_key @aws_iam
}
